server {
    listen       80;
    listen       [::]:80;
    server_name  _;
    root         /usr/share/nginx/html;

    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/access.err;


    # 该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求。
    add_header 'Access-Control-Allow-Origin' '*';
    # 该字段可选。它的值是一个布尔值，表示是否允许发送Cookie。
    #  默认情况下，Cookie不包括在CORS请求之中。设为true，即表示服务器明确许可，
    #  Cookie可以包含在请求中，一起发给服务器。这个值也只能设为true，
    #  如果服务器不要浏览器发送Cookie，删除该字段即可
    add_header 'Access-Control-Allow-Credentials' 'true';
    # 该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，上例是PUT。
    add_header 'Access-Control-Allow-Methods' '*';


    location / {
    }

    error_page 404 /404.html;
        location = /40x.html {
    }

    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
    }

    # 这里新加的
    # PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI协议默认配置.
    # Fastcgi服务器和程序(PHP,Python)沟通的协议.
    location ~ \.php$ {
        # 设置监听端口
        fastcgi_pass   lnmp-api-php.ci-cd-demos.svc.cluster.local:9000;
        # 设置nginx的默认首页文件(上面已经设置过了，可以删除)
        fastcgi_index  index.php;
        # 设置脚本文件请求的路径
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        # 引入fastcgi的配置文件
        include        fastcgi_params;
    }

    location /server-status {
        stub_status on;
        access_log off;
    }
}
